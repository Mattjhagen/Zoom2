{"ast":null,"code":"var _jsxFileName = \"/Users/matty/Zoom2/Zoom2/client/src/components/VideoRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport { Mic, MicOff, Video, VideoOff, Monitor, MessageSquare, Phone, Users, Send } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #1a1a1a;\n  display: flex;\n  flex-direction: column;\n`;\n_c = Container;\nconst Header = styled.div`\n  background: #2d2d2d;\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n`;\n_c2 = Header;\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n_c3 = RoomInfo;\nconst RoomId = styled.span`\n  font-weight: 600;\n  font-size: 1.1rem;\n`;\n_c4 = RoomId;\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n_c5 = MainContent;\nconst VideoGrid = styled.div`\n  flex: 1;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 10px;\n  padding: 20px;\n  align-content: start;\n`;\n_c6 = VideoGrid;\nconst VideoContainer = styled.div`\n  position: relative;\n  background: #333;\n  border-radius: 10px;\n  overflow: hidden;\n  aspect-ratio: 16/9;\n  min-height: 200px;\n`;\n_c7 = VideoContainer;\nconst StyledVideo = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n_c8 = StyledVideo;\nconst VideoLabel = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.9rem;\n`;\n_c9 = VideoLabel;\nconst ChatPanel = styled.div`\n  width: 350px;\n  background: #2d2d2d;\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #444;\n`;\n_c0 = ChatPanel;\nconst ChatHeader = styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #444;\n  color: white;\n  font-weight: 600;\n`;\n_c1 = ChatHeader;\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n_c10 = ChatMessages;\nconst Message = styled.div`\n  background: ${props => props.isOwn ? '#667eea' : '#444'};\n  color: white;\n  padding: 10px 15px;\n  border-radius: 10px;\n  max-width: 80%;\n  align-self: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n  word-wrap: break-word;\n`;\n_c11 = Message;\nconst MessageSender = styled.div`\n  font-size: 0.8rem;\n  opacity: 0.7;\n  margin-bottom: 5px;\n`;\n_c12 = MessageSender;\nconst ChatInput = styled.div`\n  padding: 15px;\n  border-top: 1px solid #444;\n  display: flex;\n  gap: 10px;\n`;\n_c13 = ChatInput;\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 10px 15px;\n  border: 1px solid #555;\n  border-radius: 20px;\n  background: #333;\n  color: white;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n_c14 = MessageInput;\nconst SendButton = styled.button`\n  background: #667eea;\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #5a6fd8;\n  }\n`;\n_c15 = SendButton;\nconst Controls = styled.div`\n  background: #2d2d2d;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  border-top: 1px solid #444;\n`;\n_c16 = Controls;\nconst ControlButton = styled.button`\n  background: ${props => props.active ? '#667eea' : '#444'};\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.active ? '#5a6fd8' : '#555'};\n  }\n\n  &.leave {\n    background: #dc3545;\n    \n    &:hover {\n      background: #c82333;\n    }\n  }\n`;\n_c17 = ControlButton;\nconst VideoRoom = () => {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const [socket, setSocket] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [isAudioMuted, setIsAudioMuted] = useState(false);\n  const [isVideoMuted, setIsVideoMuted] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [participants, setParticipants] = useState(1);\n  const localVideoRef = useRef(null);\n  const remoteVideoRefs = useRef(new Map());\n  const peerConnections = useRef(new Map());\n  const userName = searchParams.get('name') || 'Anonymous';\n\n  // Initialize socket connection\n  useEffect(() => {\n    const socketUrl = process.env.NODE_ENV === 'production' ? window.location.origin : 'http://localhost:5001';\n    const newSocket = io(socketUrl);\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Initialize local media stream\n  useEffect(() => {\n    const initLocalStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access camera and microphone. Please check permissions.');\n      }\n    };\n    initLocalStream();\n  }, []);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n    const handleUserConnected = userId => {\n      console.log('User connected:', userId);\n      setParticipants(prev => prev + 1);\n      createPeerConnection(userId);\n      // Send offer to the new user\n      setTimeout(() => {\n        sendOffer(userId);\n      }, 1000); // Small delay to ensure peer connection is established\n    };\n    const handleUserDisconnected = userId => {\n      console.log('User disconnected:', userId);\n      setParticipants(prev => prev - 1);\n      if (peerConnections.current.has(userId)) {\n        peerConnections.current.get(userId).close();\n        peerConnections.current.delete(userId);\n      }\n      setRemoteStreams(prev => {\n        const newStreams = new Map(prev);\n        newStreams.delete(userId);\n        return newStreams;\n      });\n    };\n    const handleOffer = async data => {\n      console.log('Received offer from:', data.userId);\n      await handleOfferReceived(data);\n    };\n    const handleAnswer = async data => {\n      console.log('Received answer from:', data.userId);\n      await handleAnswerReceived(data);\n    };\n    const handleIceCandidate = async data => {\n      console.log('Received ICE candidate from:', data.userId);\n      await handleIceCandidateReceived(data);\n    };\n    const handleMessage = data => {\n      setMessages(prev => [...prev, data]);\n    };\n    const handleExistingUsers = existingUsers => {\n      console.log('Existing users:', existingUsers);\n      existingUsers.forEach(userId => {\n        if (userId !== userName) {\n          // Don't create connection to self\n          createPeerConnection(userId);\n          setTimeout(() => {\n            sendOffer(userId);\n          }, 1000);\n        }\n      });\n    };\n    socket.on('user-connected', handleUserConnected);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n    socket.on('receive-message', handleMessage);\n    return () => {\n      socket.off('user-connected', handleUserConnected);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n      socket.off('receive-message', handleMessage);\n    };\n  }, [socket, createPeerConnection, sendOffer]);\n\n  // Join room when socket is ready\n  useEffect(() => {\n    if (socket && roomId) {\n      socket.emit('join-room', roomId, userName);\n    }\n  }, [socket, roomId, userName]);\n\n  // Send offers to existing users when local stream is ready\n  useEffect(() => {\n    if (localStream && socket && roomId) {\n      // Get existing participants and send offers to them\n      socket.emit('get-existing-users', roomId);\n    }\n  }, [localStream, socket, roomId]);\n\n  // Create peer connection\n  const createPeerConnection = useCallback(userId => {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }, {\n        urls: 'stun:stun1.l.google.com:19302'\n      }]\n    });\n\n    // Add local stream tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n      });\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = event => {\n      console.log('Received remote stream from:', userId);\n      const [remoteStream] = event.streams;\n      setRemoteStreams(prev => new Map(prev).set(userId, remoteStream));\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          roomId,\n          userId\n        });\n      }\n    };\n    peerConnections.current.set(userId, peerConnection);\n  }, [localStream, socket, roomId]);\n\n  // Handle offer received\n  const handleOfferReceived = useCallback(async data => {\n    const {\n      offer,\n      userId\n    } = data;\n    let peerConnection = peerConnections.current.get(userId);\n    if (!peerConnection) {\n      createPeerConnection(userId);\n      peerConnection = peerConnections.current.get(userId);\n    }\n    try {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      socket.emit('answer', {\n        answer,\n        roomId,\n        userId\n      });\n    } catch (error) {\n      console.error('Error handling offer:', error);\n    }\n  }, [createPeerConnection, socket, roomId]);\n\n  // Handle answer received\n  const handleAnswerReceived = useCallback(async data => {\n    const {\n      answer,\n      userId\n    } = data;\n    const peerConnection = peerConnections.current.get(userId);\n    if (peerConnection) {\n      try {\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (error) {\n        console.error('Error handling answer:', error);\n      }\n    }\n  }, []);\n\n  // Handle ICE candidate received\n  const handleIceCandidateReceived = useCallback(async data => {\n    const {\n      candidate,\n      userId\n    } = data;\n    const peerConnection = peerConnections.current.get(userId);\n    if (peerConnection) {\n      try {\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (error) {\n        console.error('Error handling ICE candidate:', error);\n      }\n    }\n  }, []);\n\n  // Send offer to new user\n  const sendOffer = useCallback(async userId => {\n    const peerConnection = peerConnections.current.get(userId);\n    if (!peerConnection) return;\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      socket.emit('offer', {\n        offer,\n        roomId,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending offer:', error);\n    }\n  }, [socket, roomId]);\n\n  // Toggle audio\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioMuted(!audioTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle video\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoMuted(!videoTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        });\n\n        // Replace video track in all peer connections\n        const videoTrack = screenStream.getVideoTracks()[0];\n        peerConnections.current.forEach(peerConnection => {\n          const sender = peerConnection.getSenders().find(s => s.track && s.track.kind === 'video');\n          if (sender) {\n            sender.replaceTrack(videoTrack);\n          }\n        });\n\n        // Update local video\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n        }\n        setIsScreenSharing(true);\n\n        // Handle screen share end\n        videoTrack.onended = () => {\n          toggleScreenShare();\n        };\n      } else {\n        // Stop screen sharing and restore camera\n        if (localStream) {\n          const videoTrack = localStream.getVideoTracks()[0];\n          peerConnections.current.forEach(peerConnection => {\n            const sender = peerConnection.getSenders().find(s => s.track && s.track.kind === 'video');\n            if (sender) {\n              sender.replaceTrack(videoTrack);\n            }\n          });\n          if (localVideoRef.current) {\n            localVideoRef.current.srcObject = localStream;\n          }\n        }\n        setIsScreenSharing(false);\n      }\n    } catch (error) {\n      console.error('Error toggling screen share:', error);\n    }\n  };\n\n  // Send message\n  const sendMessage = () => {\n    if (newMessage.trim() && socket) {\n      const message = {\n        text: newMessage.trim(),\n        sender: userName,\n        timestamp: new Date().toISOString()\n      };\n      socket.emit('send-message', {\n        message,\n        roomId\n      });\n      setNewMessage('');\n    }\n  };\n\n  // Leave room\n  const leaveRoom = () => {\n    if (socket) {\n      socket.emit('leave-room', roomId, userName);\n    }\n\n    // Close all peer connections\n    peerConnections.current.forEach(peerConnection => {\n      peerConnection.close();\n    });\n\n    // Stop local stream\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    navigate('/');\n  };\n\n  // Handle key press for message input\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(RoomInfo, {\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RoomId, {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"(\", participants, \" participants)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(VideoGrid, {\n        children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n            ref: localVideoRef,\n            autoPlay: true,\n            muted: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VideoLabel, {\n            children: [userName, \" (You)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), Array.from(remoteStreams.entries()).map(([userId, stream]) => /*#__PURE__*/_jsxDEV(VideoContainer, {\n          children: [/*#__PURE__*/_jsxDEV(StyledVideo, {\n            ref: ref => {\n              if (ref) {\n                ref.srcObject = stream;\n                remoteVideoRefs.current.set(userId, ref);\n              }\n            },\n            autoPlay: true,\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(VideoLabel, {\n            children: userId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, userId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this), showChat && /*#__PURE__*/_jsxDEV(ChatPanel, {\n        children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatMessages, {\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n            isOwn: message.sender === userName,\n            children: [/*#__PURE__*/_jsxDEV(MessageSender, {\n              children: message.sender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 19\n            }, this), message.text]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n          children: [/*#__PURE__*/_jsxDEV(MessageInput, {\n            type: \"text\",\n            placeholder: \"Type a message...\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n            onClick: sendMessage,\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 637,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: toggleAudio,\n        active: !isAudioMuted,\n        title: isAudioMuted ? 'Unmute' : 'Mute',\n        children: isAudioMuted ? /*#__PURE__*/_jsxDEV(MicOff, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: toggleVideo,\n        active: !isVideoMuted,\n        title: isVideoMuted ? 'Turn on camera' : 'Turn off camera',\n        children: isVideoMuted ? /*#__PURE__*/_jsxDEV(VideoOff, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(Video, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: toggleScreenShare,\n        active: isScreenSharing,\n        title: isScreenSharing ? 'Stop sharing' : 'Share screen',\n        children: /*#__PURE__*/_jsxDEV(Monitor, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: () => setShowChat(!showChat),\n        active: showChat,\n        title: \"Toggle chat\",\n        children: /*#__PURE__*/_jsxDEV(MessageSquare, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        onClick: leaveRoom,\n        className: \"leave\",\n        title: \"Leave room\",\n        children: /*#__PURE__*/_jsxDEV(Phone, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 577,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRoom, \"uDO7EzF/BSMBfUFFNQIymQWYXQU=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c18 = VideoRoom;\nexport default VideoRoom;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"RoomInfo\");\n$RefreshReg$(_c4, \"RoomId\");\n$RefreshReg$(_c5, \"MainContent\");\n$RefreshReg$(_c6, \"VideoGrid\");\n$RefreshReg$(_c7, \"VideoContainer\");\n$RefreshReg$(_c8, \"StyledVideo\");\n$RefreshReg$(_c9, \"VideoLabel\");\n$RefreshReg$(_c0, \"ChatPanel\");\n$RefreshReg$(_c1, \"ChatHeader\");\n$RefreshReg$(_c10, \"ChatMessages\");\n$RefreshReg$(_c11, \"Message\");\n$RefreshReg$(_c12, \"MessageSender\");\n$RefreshReg$(_c13, \"ChatInput\");\n$RefreshReg$(_c14, \"MessageInput\");\n$RefreshReg$(_c15, \"SendButton\");\n$RefreshReg$(_c16, \"Controls\");\n$RefreshReg$(_c17, \"ControlButton\");\n$RefreshReg$(_c18, \"VideoRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useSearchParams","useNavigate","io","styled","Mic","MicOff","Video","VideoOff","Monitor","MessageSquare","Phone","Users","Send","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","RoomInfo","_c3","RoomId","span","_c4","MainContent","_c5","VideoGrid","_c6","VideoContainer","_c7","StyledVideo","video","_c8","VideoLabel","_c9","ChatPanel","_c0","ChatHeader","_c1","ChatMessages","_c10","Message","props","isOwn","_c11","MessageSender","_c12","ChatInput","_c13","MessageInput","input","_c14","SendButton","button","_c15","Controls","_c16","ControlButton","active","_c17","VideoRoom","_s","roomId","searchParams","navigate","socket","setSocket","localStream","setLocalStream","remoteStreams","setRemoteStreams","Map","isAudioMuted","setIsAudioMuted","isVideoMuted","setIsVideoMuted","isScreenSharing","setIsScreenSharing","showChat","setShowChat","messages","setMessages","newMessage","setNewMessage","participants","setParticipants","localVideoRef","remoteVideoRefs","peerConnections","userName","get","socketUrl","process","env","NODE_ENV","window","location","origin","newSocket","close","initLocalStream","stream","navigator","mediaDevices","getUserMedia","audio","current","srcObject","error","console","alert","handleUserConnected","userId","log","prev","createPeerConnection","setTimeout","sendOffer","handleUserDisconnected","has","delete","newStreams","handleOffer","data","handleOfferReceived","handleAnswer","handleAnswerReceived","handleIceCandidate","handleIceCandidateReceived","handleMessage","handleExistingUsers","existingUsers","forEach","on","off","emit","peerConnection","RTCPeerConnection","iceServers","urls","getTracks","track","addTrack","ontrack","event","remoteStream","streams","set","onicecandidate","candidate","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","createOffer","toggleAudio","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","toggleScreenShare","screenStream","getDisplayMedia","sender","getSenders","find","s","kind","replaceTrack","onended","sendMessage","trim","message","text","timestamp","Date","toISOString","leaveRoom","stop","handleKeyPress","e","key","children","size","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","playsInline","Array","from","entries","map","index","type","placeholder","value","onChange","target","onKeyPress","onClick","title","className","_c18","$RefreshReg$"],"sources":["/Users/matty/Zoom2/Zoom2/client/src/components/VideoRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport { \n  Mic, \n  MicOff, \n  Video, \n  VideoOff, \n  Monitor, \n  MessageSquare, \n  Phone, \n  Users,\n  Send\n} from 'lucide-react';\n\nconst Container = styled.div`\n  min-height: 100vh;\n  background: #1a1a1a;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  background: #2d2d2d;\n  padding: 15px 20px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: white;\n`;\n\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nconst RoomId = styled.span`\n  font-weight: 600;\n  font-size: 1.1rem;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst VideoGrid = styled.div`\n  flex: 1;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 10px;\n  padding: 20px;\n  align-content: start;\n`;\n\nconst VideoContainer = styled.div`\n  position: relative;\n  background: #333;\n  border-radius: 10px;\n  overflow: hidden;\n  aspect-ratio: 16/9;\n  min-height: 200px;\n`;\n\nconst StyledVideo = styled.video`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst VideoLabel = styled.div`\n  position: absolute;\n  bottom: 10px;\n  left: 10px;\n  background: rgba(0, 0, 0, 0.7);\n  color: white;\n  padding: 5px 10px;\n  border-radius: 5px;\n  font-size: 0.9rem;\n`;\n\nconst ChatPanel = styled.div`\n  width: 350px;\n  background: #2d2d2d;\n  display: flex;\n  flex-direction: column;\n  border-left: 1px solid #444;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 15px 20px;\n  border-bottom: 1px solid #444;\n  color: white;\n  font-weight: 600;\n`;\n\nconst ChatMessages = styled.div`\n  flex: 1;\n  padding: 15px;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nconst Message = styled.div`\n  background: ${props => props.isOwn ? '#667eea' : '#444'};\n  color: white;\n  padding: 10px 15px;\n  border-radius: 10px;\n  max-width: 80%;\n  align-self: ${props => props.isOwn ? 'flex-end' : 'flex-start'};\n  word-wrap: break-word;\n`;\n\nconst MessageSender = styled.div`\n  font-size: 0.8rem;\n  opacity: 0.7;\n  margin-bottom: 5px;\n`;\n\nconst ChatInput = styled.div`\n  padding: 15px;\n  border-top: 1px solid #444;\n  display: flex;\n  gap: 10px;\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 10px 15px;\n  border: 1px solid #555;\n  border-radius: 20px;\n  background: #333;\n  color: white;\n  font-size: 0.9rem;\n\n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n\n  &::placeholder {\n    color: #999;\n  }\n`;\n\nconst SendButton = styled.button`\n  background: #667eea;\n  border: none;\n  border-radius: 50%;\n  width: 40px;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:hover {\n    background: #5a6fd8;\n  }\n`;\n\nconst Controls = styled.div`\n  background: #2d2d2d;\n  padding: 20px;\n  display: flex;\n  justify-content: center;\n  gap: 15px;\n  border-top: 1px solid #444;\n`;\n\nconst ControlButton = styled.button`\n  background: ${props => props.active ? '#667eea' : '#444'};\n  border: none;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.active ? '#5a6fd8' : '#555'};\n  }\n\n  &.leave {\n    background: #dc3545;\n    \n    &:hover {\n      background: #c82333;\n    }\n  }\n`;\n\nconst VideoRoom = () => {\n  const { roomId } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  \n  const [socket, setSocket] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [isAudioMuted, setIsAudioMuted] = useState(false);\n  const [isVideoMuted, setIsVideoMuted] = useState(false);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const [showChat, setShowChat] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [participants, setParticipants] = useState(1);\n\n  const localVideoRef = useRef(null);\n  const remoteVideoRefs = useRef(new Map());\n  const peerConnections = useRef(new Map());\n  const userName = searchParams.get('name') || 'Anonymous';\n\n  // Initialize socket connection\n  useEffect(() => {\n    const socketUrl = process.env.NODE_ENV === 'production' \n      ? window.location.origin \n      : 'http://localhost:5001';\n    const newSocket = io(socketUrl);\n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Initialize local media stream\n  useEffect(() => {\n    const initLocalStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access camera and microphone. Please check permissions.');\n      }\n    };\n\n    initLocalStream();\n  }, []);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUserConnected = (userId) => {\n      console.log('User connected:', userId);\n      setParticipants(prev => prev + 1);\n      createPeerConnection(userId);\n      // Send offer to the new user\n      setTimeout(() => {\n        sendOffer(userId);\n      }, 1000); // Small delay to ensure peer connection is established\n    };\n\n    const handleUserDisconnected = (userId) => {\n      console.log('User disconnected:', userId);\n      setParticipants(prev => prev - 1);\n      if (peerConnections.current.has(userId)) {\n        peerConnections.current.get(userId).close();\n        peerConnections.current.delete(userId);\n      }\n      setRemoteStreams(prev => {\n        const newStreams = new Map(prev);\n        newStreams.delete(userId);\n        return newStreams;\n      });\n    };\n\n    const handleOffer = async (data) => {\n      console.log('Received offer from:', data.userId);\n      await handleOfferReceived(data);\n    };\n\n    const handleAnswer = async (data) => {\n      console.log('Received answer from:', data.userId);\n      await handleAnswerReceived(data);\n    };\n\n    const handleIceCandidate = async (data) => {\n      console.log('Received ICE candidate from:', data.userId);\n      await handleIceCandidateReceived(data);\n    };\n\n    const handleMessage = (data) => {\n      setMessages(prev => [...prev, data]);\n    };\n\n    const handleExistingUsers = (existingUsers) => {\n      console.log('Existing users:', existingUsers);\n      existingUsers.forEach(userId => {\n        if (userId !== userName) { // Don't create connection to self\n          createPeerConnection(userId);\n          setTimeout(() => {\n            sendOffer(userId);\n          }, 1000);\n        }\n      });\n    };\n\n    socket.on('user-connected', handleUserConnected);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n    socket.on('receive-message', handleMessage);\n\n    return () => {\n      socket.off('user-connected', handleUserConnected);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n      socket.off('receive-message', handleMessage);\n    };\n  }, [socket, createPeerConnection, sendOffer]);\n\n  // Join room when socket is ready\n  useEffect(() => {\n    if (socket && roomId) {\n      socket.emit('join-room', roomId, userName);\n    }\n  }, [socket, roomId, userName]);\n\n  // Send offers to existing users when local stream is ready\n  useEffect(() => {\n    if (localStream && socket && roomId) {\n      // Get existing participants and send offers to them\n      socket.emit('get-existing-users', roomId);\n    }\n  }, [localStream, socket, roomId]);\n\n  // Create peer connection\n  const createPeerConnection = useCallback((userId) => {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' }\n      ]\n    });\n\n    // Add local stream tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n      });\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = (event) => {\n      console.log('Received remote stream from:', userId);\n      const [remoteStream] = event.streams;\n      setRemoteStreams(prev => new Map(prev).set(userId, remoteStream));\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          roomId,\n          userId\n        });\n      }\n    };\n\n    peerConnections.current.set(userId, peerConnection);\n  }, [localStream, socket, roomId]);\n\n  // Handle offer received\n  const handleOfferReceived = useCallback(async (data) => {\n    const { offer, userId } = data;\n    let peerConnection = peerConnections.current.get(userId);\n    \n    if (!peerConnection) {\n      createPeerConnection(userId);\n      peerConnection = peerConnections.current.get(userId);\n    }\n\n    try {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peerConnection.createAnswer();\n      await peerConnection.setLocalDescription(answer);\n      \n      socket.emit('answer', {\n        answer,\n        roomId,\n        userId\n      });\n    } catch (error) {\n      console.error('Error handling offer:', error);\n    }\n  }, [createPeerConnection, socket, roomId]);\n\n  // Handle answer received\n  const handleAnswerReceived = useCallback(async (data) => {\n    const { answer, userId } = data;\n    const peerConnection = peerConnections.current.get(userId);\n    \n    if (peerConnection) {\n      try {\n        await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n      } catch (error) {\n        console.error('Error handling answer:', error);\n      }\n    }\n  }, []);\n\n  // Handle ICE candidate received\n  const handleIceCandidateReceived = useCallback(async (data) => {\n    const { candidate, userId } = data;\n    const peerConnection = peerConnections.current.get(userId);\n    \n    if (peerConnection) {\n      try {\n        await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n      } catch (error) {\n        console.error('Error handling ICE candidate:', error);\n      }\n    }\n  }, []);\n\n  // Send offer to new user\n  const sendOffer = useCallback(async (userId) => {\n    const peerConnection = peerConnections.current.get(userId);\n    if (!peerConnection) return;\n\n    try {\n      const offer = await peerConnection.createOffer();\n      await peerConnection.setLocalDescription(offer);\n      \n      socket.emit('offer', {\n        offer,\n        roomId,\n        userId\n      });\n    } catch (error) {\n      console.error('Error sending offer:', error);\n    }\n  }, [socket, roomId]);\n\n  // Toggle audio\n  const toggleAudio = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsAudioMuted(!audioTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle video\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoMuted(!videoTrack.enabled);\n      }\n    }\n  };\n\n  // Toggle screen sharing\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        });\n        \n        // Replace video track in all peer connections\n        const videoTrack = screenStream.getVideoTracks()[0];\n        peerConnections.current.forEach(peerConnection => {\n          const sender = peerConnection.getSenders().find(s => \n            s.track && s.track.kind === 'video'\n          );\n          if (sender) {\n            sender.replaceTrack(videoTrack);\n          }\n        });\n\n        // Update local video\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = screenStream;\n        }\n\n        setIsScreenSharing(true);\n\n        // Handle screen share end\n        videoTrack.onended = () => {\n          toggleScreenShare();\n        };\n      } else {\n        // Stop screen sharing and restore camera\n        if (localStream) {\n          const videoTrack = localStream.getVideoTracks()[0];\n          peerConnections.current.forEach(peerConnection => {\n            const sender = peerConnection.getSenders().find(s => \n              s.track && s.track.kind === 'video'\n            );\n            if (sender) {\n              sender.replaceTrack(videoTrack);\n            }\n          });\n\n          if (localVideoRef.current) {\n            localVideoRef.current.srcObject = localStream;\n          }\n        }\n        setIsScreenSharing(false);\n      }\n    } catch (error) {\n      console.error('Error toggling screen share:', error);\n    }\n  };\n\n  // Send message\n  const sendMessage = () => {\n    if (newMessage.trim() && socket) {\n      const message = {\n        text: newMessage.trim(),\n        sender: userName,\n        timestamp: new Date().toISOString()\n      };\n      \n      socket.emit('send-message', { message, roomId });\n      setNewMessage('');\n    }\n  };\n\n  // Leave room\n  const leaveRoom = () => {\n    if (socket) {\n      socket.emit('leave-room', roomId, userName);\n    }\n    \n    // Close all peer connections\n    peerConnections.current.forEach(peerConnection => {\n      peerConnection.close();\n    });\n    \n    // Stop local stream\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    \n    navigate('/');\n  };\n\n  // Handle key press for message input\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <Container>\n      <Header>\n        <RoomInfo>\n          <Users size={20} />\n          <RoomId>Room: {roomId}</RoomId>\n          <span>({participants} participants)</span>\n        </RoomInfo>\n      </Header>\n\n      <MainContent>\n        <VideoGrid>\n          {/* Local video */}\n          <VideoContainer>\n            <StyledVideo\n              ref={localVideoRef}\n              autoPlay\n              muted\n              playsInline\n            />\n            <VideoLabel>{userName} (You)</VideoLabel>\n          </VideoContainer>\n\n          {/* Remote videos */}\n          {Array.from(remoteStreams.entries()).map(([userId, stream]) => (\n            <VideoContainer key={userId}>\n              <StyledVideo\n                ref={ref => {\n                  if (ref) {\n                    ref.srcObject = stream;\n                    remoteVideoRefs.current.set(userId, ref);\n                  }\n                }}\n                autoPlay\n                playsInline\n              />\n              <VideoLabel>{userId}</VideoLabel>\n            </VideoContainer>\n          ))}\n        </VideoGrid>\n\n        {showChat && (\n          <ChatPanel>\n            <ChatHeader>Chat</ChatHeader>\n            <ChatMessages>\n              {messages.map((message, index) => (\n                <Message key={index} isOwn={message.sender === userName}>\n                  <MessageSender>{message.sender}</MessageSender>\n                  {message.text}\n                </Message>\n              ))}\n            </ChatMessages>\n            <ChatInput>\n              <MessageInput\n                type=\"text\"\n                placeholder=\"Type a message...\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                onKeyPress={handleKeyPress}\n              />\n              <SendButton onClick={sendMessage}>\n                <Send size={16} />\n              </SendButton>\n            </ChatInput>\n          </ChatPanel>\n        )}\n      </MainContent>\n\n      <Controls>\n        <ControlButton\n          onClick={toggleAudio}\n          active={!isAudioMuted}\n          title={isAudioMuted ? 'Unmute' : 'Mute'}\n        >\n          {isAudioMuted ? <MicOff size={20} /> : <Mic size={20} />}\n        </ControlButton>\n\n        <ControlButton\n          onClick={toggleVideo}\n          active={!isVideoMuted}\n          title={isVideoMuted ? 'Turn on camera' : 'Turn off camera'}\n        >\n          {isVideoMuted ? <VideoOff size={20} /> : <Video size={20} />}\n        </ControlButton>\n\n        <ControlButton\n          onClick={toggleScreenShare}\n          active={isScreenSharing}\n          title={isScreenSharing ? 'Stop sharing' : 'Share screen'}\n        >\n          <Monitor size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={() => setShowChat(!showChat)}\n          active={showChat}\n          title=\"Toggle chat\"\n        >\n          <MessageSquare size={20} />\n        </ControlButton>\n\n        <ControlButton\n          onClick={leaveRoom}\n          className=\"leave\"\n          title=\"Leave room\"\n        >\n          <Phone size={20} />\n        </ControlButton>\n      </Controls>\n    </Container>\n  );\n};\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}