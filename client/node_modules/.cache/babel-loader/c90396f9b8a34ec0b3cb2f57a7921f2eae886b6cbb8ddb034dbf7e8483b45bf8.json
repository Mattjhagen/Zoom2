{"ast":null,"code":"var _jsxFileName = \"/Users/matty/Zoom2/Zoom2/client/src/components/VideoRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport VideoGrid from './VideoGrid';\nimport Controls from './Controls';\nimport Chat from './Chat';\nimport { Users, MessageCircle, X } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: #1a1a1a;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n_c = Container;\nconst Header = styled.div`\n  background: rgba(0, 0, 0, 0.8);\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n`;\n_c2 = Header;\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n_c3 = RoomInfo;\nconst RoomTitle = styled.h2`\n  color: white;\n  font-size: 1.2rem;\n  margin: 0;\n`;\n_c4 = RoomTitle;\nconst ParticipantCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 0.9rem;\n`;\n_c5 = ParticipantCount;\nconst HeaderControls = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n_c6 = HeaderControls;\nconst ToggleButton = styled.button`\n  background: ${props => props.active ? '#667eea' : 'rgba(255, 255, 255, 0.1)'};\n  border: none;\n  border-radius: 8px;\n  padding: 0.5rem;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${props => props.active ? '#5a6fd8' : 'rgba(255, 255, 255, 0.2)'};\n  }\n`;\n_c7 = ToggleButton;\nconst CloseButton = styled.button`\n  background: #ff4757;\n  border: none;\n  border-radius: 8px;\n  padding: 0.5rem;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: #ff3742;\n  }\n`;\n_c8 = CloseButton;\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n_c9 = MainContent;\nconst VideoContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n_c0 = VideoContainer;\nconst ChatContainer = styled.div`\n  width: ${props => props.isOpen ? '350px' : '0'};\n  background: rgba(0, 0, 0, 0.9);\n  border-left: 1px solid rgba(255, 255, 255, 0.1);\n  transition: width 0.3s ease;\n  overflow: hidden;\n`;\n_c1 = ChatContainer;\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n_c10 = LoadingOverlay;\nconst LoadingText = styled.div`\n  color: white;\n  font-size: 1.2rem;\n`;\n_c11 = LoadingText;\nfunction VideoRoom() {\n  _s();\n  const {\n    roomId\n  } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const userName = searchParams.get('name') || 'Anonymous';\n  const userId = useRef(Math.random().toString(36).substr(2, 9));\n  const [socket, setSocket] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [participants, setParticipants] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOff, setIsVideoOff] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  const peerConnections = useRef(new Map());\n  const localVideoRef = useRef(null);\n  const screenStreamRef = useRef(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Get user media and join room\n  useEffect(() => {\n    const initializeMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access camera and microphone. Please check permissions.');\n        navigate('/');\n      }\n    };\n    if (socket) {\n      initializeMedia();\n    }\n  }, [socket, navigate]);\n\n  // Join room when socket and stream are ready\n  useEffect(() => {\n    if (socket && localStream) {\n      socket.emit('join-room', roomId, userId.current, userName);\n    }\n  }, [socket, localStream, roomId, userName]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n    const handleUserConnected = (connectedUserId, connectedUserName) => {\n      console.log('User connected:', connectedUserId, connectedUserName);\n      setParticipants(prev => [...prev, {\n        id: connectedUserId,\n        name: connectedUserName\n      }]);\n    };\n    const handleUserDisconnected = disconnectedUserId => {\n      console.log('User disconnected:', disconnectedUserId);\n      setParticipants(prev => prev.filter(p => p.id !== disconnectedUserId));\n      setRemoteStreams(prev => {\n        const newMap = new Map(prev);\n        newMap.delete(disconnectedUserId);\n        return newMap;\n      });\n      peerConnections.current.delete(disconnectedUserId);\n    };\n    const handleCurrentUsers = users => {\n      setParticipants(users);\n    };\n    const handleOffer = async data => {\n      await handleOfferReceived(data);\n    };\n    const handleAnswer = async data => {\n      await handleAnswerReceived(data);\n    };\n    const handleIceCandidate = async data => {\n      await handleIceCandidateReceived(data);\n    };\n    socket.on('user-connected', handleUserConnected);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('current-users', handleCurrentUsers);\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n    return () => {\n      socket.off('user-connected', handleUserConnected);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('current-users', handleCurrentUsers);\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n    };\n  }, [socket]);\n\n  // WebRTC functions\n  const createPeerConnection = useCallback(async userId => {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }, {\n        urls: 'stun:stun1.l.google.com:19302'\n      }]\n    });\n\n    // Add local stream tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n      });\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = event => {\n      const [remoteStream] = event.streams;\n      setRemoteStreams(prev => new Map(prev.set(userId, remoteStream)));\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          roomId: roomId,\n          targetUserId: userId\n        });\n      }\n    };\n    peerConnections.current.set(userId, peerConnection);\n    return peerConnection;\n  }, [localStream, socket, roomId]);\n  const handleOfferReceived = async data => {\n    const {\n      offer,\n      fromUserId\n    } = data;\n    const peerConnection = await createPeerConnection(fromUserId);\n    await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n    const answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n    socket.emit('answer', {\n      answer: answer,\n      roomId: roomId,\n      targetUserId: fromUserId\n    });\n  };\n  const handleAnswerReceived = async data => {\n    const {\n      answer,\n      fromUserId\n    } = data;\n    const peerConnection = peerConnections.current.get(fromUserId);\n    if (peerConnection) {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n    }\n  };\n  const handleIceCandidateReceived = async data => {\n    const {\n      candidate,\n      fromUserId\n    } = data;\n    const peerConnection = peerConnections.current.get(fromUserId);\n    if (peerConnection) {\n      await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n    }\n  };\n\n  // Send offer to new user\n  useEffect(() => {\n    if (socket && localStream && participants.length > 0) {\n      const sendOfferToNewUser = async participant => {\n        if (participant.id !== userId.current) {\n          const peerConnection = await createPeerConnection(participant.id);\n          const offer = await peerConnection.createOffer();\n          await peerConnection.setLocalDescription(offer);\n          socket.emit('offer', {\n            offer: offer,\n            roomId: roomId,\n            targetUserId: participant.id\n          });\n        }\n      };\n\n      // Send offers to all current participants\n      participants.forEach(sendOfferToNewUser);\n    }\n  }, [participants, socket, localStream, roomId, createPeerConnection]);\n  const toggleMute = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsMuted(!audioTrack.enabled);\n        socket.emit('toggle-audio', !audioTrack.enabled);\n      }\n    }\n  };\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoOff(!videoTrack.enabled);\n        socket.emit('toggle-video', !videoTrack.enabled);\n      }\n    }\n  };\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        });\n        screenStreamRef.current = screenStream;\n        setIsScreenSharing(true);\n\n        // Replace video track in all peer connections\n        const videoTrack = screenStream.getVideoTracks()[0];\n        peerConnections.current.forEach(peerConnection => {\n          const sender = peerConnection.getSenders().find(s => s.track && s.track.kind === 'video');\n          if (sender) {\n            sender.replaceTrack(videoTrack);\n          }\n        });\n\n        // Handle screen share end\n        videoTrack.onended = () => {\n          setIsScreenSharing(false);\n          if (localStream) {\n            const localVideoTrack = localStream.getVideoTracks()[0];\n            peerConnections.current.forEach(peerConnection => {\n              const sender = peerConnection.getSenders().find(s => s.track && s.track.kind === 'video');\n              if (sender) {\n                sender.replaceTrack(localVideoTrack);\n              }\n            });\n          }\n        };\n      } else {\n        if (screenStreamRef.current) {\n          screenStreamRef.current.getTracks().forEach(track => track.stop());\n          screenStreamRef.current = null;\n        }\n        setIsScreenSharing(false);\n      }\n    } catch (error) {\n      console.error('Error sharing screen:', error);\n    }\n  };\n  const leaveRoom = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStreamRef.current) {\n      screenStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    peerConnections.current.forEach(peerConnection => {\n      peerConnection.close();\n    });\n    navigate('/');\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingOverlay, {\n      children: /*#__PURE__*/_jsxDEV(LoadingText, {\n        children: \"Connecting to room...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [/*#__PURE__*/_jsxDEV(RoomInfo, {\n        children: [/*#__PURE__*/_jsxDEV(RoomTitle, {\n          children: [\"Room: \", roomId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParticipantCount, {\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), participants.length + 1, \" participants\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HeaderControls, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          active: isChatOpen,\n          onClick: () => setIsChatOpen(!isChatOpen),\n          children: /*#__PURE__*/_jsxDEV(MessageCircle, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n          onClick: leaveRoom,\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      children: [/*#__PURE__*/_jsxDEV(VideoContainer, {\n        children: [/*#__PURE__*/_jsxDEV(VideoGrid, {\n          localStream: localStream,\n          remoteStreams: remoteStreams,\n          participants: participants,\n          localVideoRef: localVideoRef,\n          isScreenSharing: isScreenSharing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {\n          isMuted: isMuted,\n          isVideoOff: isVideoOff,\n          isScreenSharing: isScreenSharing,\n          onToggleMute: toggleMute,\n          onToggleVideo: toggleVideo,\n          onToggleScreenShare: toggleScreenShare,\n          onLeaveRoom: leaveRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        isOpen: isChatOpen,\n        children: /*#__PURE__*/_jsxDEV(Chat, {\n          socket: socket,\n          userName: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoRoom, \"RxqsSNvQiYnlhskR8C3vMPtmqsM=\", false, function () {\n  return [useParams, useSearchParams, useNavigate];\n});\n_c12 = VideoRoom;\nexport default VideoRoom;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"RoomInfo\");\n$RefreshReg$(_c4, \"RoomTitle\");\n$RefreshReg$(_c5, \"ParticipantCount\");\n$RefreshReg$(_c6, \"HeaderControls\");\n$RefreshReg$(_c7, \"ToggleButton\");\n$RefreshReg$(_c8, \"CloseButton\");\n$RefreshReg$(_c9, \"MainContent\");\n$RefreshReg$(_c0, \"VideoContainer\");\n$RefreshReg$(_c1, \"ChatContainer\");\n$RefreshReg$(_c10, \"LoadingOverlay\");\n$RefreshReg$(_c11, \"LoadingText\");\n$RefreshReg$(_c12, \"VideoRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useParams","useSearchParams","useNavigate","io","styled","VideoGrid","Controls","Chat","Users","MessageCircle","X","jsxDEV","_jsxDEV","Container","div","_c","Header","_c2","RoomInfo","_c3","RoomTitle","h2","_c4","ParticipantCount","_c5","HeaderControls","_c6","ToggleButton","button","props","active","_c7","CloseButton","_c8","MainContent","_c9","VideoContainer","_c0","ChatContainer","isOpen","_c1","LoadingOverlay","_c10","LoadingText","_c11","VideoRoom","_s","roomId","searchParams","navigate","userName","get","userId","Math","random","toString","substr","socket","setSocket","localStream","setLocalStream","remoteStreams","setRemoteStreams","Map","participants","setParticipants","isMuted","setIsMuted","isVideoOff","setIsVideoOff","isChatOpen","setIsChatOpen","isLoading","setIsLoading","isScreenSharing","setIsScreenSharing","peerConnections","localVideoRef","screenStreamRef","newSocket","close","initializeMedia","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","error","console","alert","emit","handleUserConnected","connectedUserId","connectedUserName","log","prev","id","name","handleUserDisconnected","disconnectedUserId","filter","p","newMap","delete","handleCurrentUsers","users","handleOffer","data","handleOfferReceived","handleAnswer","handleAnswerReceived","handleIceCandidate","handleIceCandidateReceived","on","off","createPeerConnection","peerConnection","RTCPeerConnection","iceServers","urls","getTracks","forEach","track","addTrack","ontrack","event","remoteStream","streams","set","onicecandidate","candidate","targetUserId","offer","fromUserId","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","length","sendOfferToNewUser","participant","createOffer","toggleMute","audioTrack","getAudioTracks","enabled","toggleVideo","videoTrack","getVideoTracks","toggleScreenShare","screenStream","getDisplayMedia","sender","getSenders","find","s","kind","replaceTrack","onended","localVideoTrack","stop","leaveRoom","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","onToggleMute","onToggleVideo","onToggleScreenShare","onLeaveRoom","_c12","$RefreshReg$"],"sources":["/Users/matty/Zoom2/Zoom2/client/src/components/VideoRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useSearchParams, useNavigate } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport styled from 'styled-components';\nimport VideoGrid from './VideoGrid';\nimport Controls from './Controls';\nimport Chat from './Chat';\nimport { Users, MessageCircle, X } from 'lucide-react';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: #1a1a1a;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst Header = styled.div`\n  background: rgba(0, 0, 0, 0.8);\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n`;\n\nconst RoomInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst RoomTitle = styled.h2`\n  color: white;\n  font-size: 1.2rem;\n  margin: 0;\n`;\n\nconst ParticipantCount = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: rgba(255, 255, 255, 0.7);\n  font-size: 0.9rem;\n`;\n\nconst HeaderControls = styled.div`\n  display: flex;\n  gap: 1rem;\n  align-items: center;\n`;\n\nconst ToggleButton = styled.button`\n  background: ${props => props.active ? '#667eea' : 'rgba(255, 255, 255, 0.1)'};\n  border: none;\n  border-radius: 8px;\n  padding: 0.5rem;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: ${props => props.active ? '#5a6fd8' : 'rgba(255, 255, 255, 0.2)'};\n  }\n`;\n\nconst CloseButton = styled.button`\n  background: #ff4757;\n  border: none;\n  border-radius: 8px;\n  padding: 0.5rem;\n  color: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    background: #ff3742;\n  }\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  display: flex;\n  position: relative;\n`;\n\nconst VideoContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n\nconst ChatContainer = styled.div`\n  width: ${props => props.isOpen ? '350px' : '0'};\n  background: rgba(0, 0, 0, 0.9);\n  border-left: 1px solid rgba(255, 255, 255, 0.1);\n  transition: width 0.3s ease;\n  overflow: hidden;\n`;\n\nconst LoadingOverlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n\nconst LoadingText = styled.div`\n  color: white;\n  font-size: 1.2rem;\n`;\n\nfunction VideoRoom() {\n  const { roomId } = useParams();\n  const [searchParams] = useSearchParams();\n  const navigate = useNavigate();\n  \n  const userName = searchParams.get('name') || 'Anonymous';\n  const userId = useRef(Math.random().toString(36).substr(2, 9));\n  \n  const [socket, setSocket] = useState(null);\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStreams, setRemoteStreams] = useState(new Map());\n  const [participants, setParticipants] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isVideoOff, setIsVideoOff] = useState(false);\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\n  \n  const peerConnections = useRef(new Map());\n  const localVideoRef = useRef(null);\n  const screenStreamRef = useRef(null);\n\n  // Initialize socket connection\n  useEffect(() => {\n    const newSocket = io('http://localhost:5000');\n    setSocket(newSocket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, []);\n\n  // Get user media and join room\n  useEffect(() => {\n    const initializeMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: true\n        });\n        \n        setLocalStream(stream);\n        if (localVideoRef.current) {\n          localVideoRef.current.srcObject = stream;\n        }\n        \n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error accessing media devices:', error);\n        alert('Unable to access camera and microphone. Please check permissions.');\n        navigate('/');\n      }\n    };\n\n    if (socket) {\n      initializeMedia();\n    }\n  }, [socket, navigate]);\n\n  // Join room when socket and stream are ready\n  useEffect(() => {\n    if (socket && localStream) {\n      socket.emit('join-room', roomId, userId.current, userName);\n    }\n  }, [socket, localStream, roomId, userName]);\n\n  // Socket event handlers\n  useEffect(() => {\n    if (!socket) return;\n\n    const handleUserConnected = (connectedUserId, connectedUserName) => {\n      console.log('User connected:', connectedUserId, connectedUserName);\n      setParticipants(prev => [...prev, { id: connectedUserId, name: connectedUserName }]);\n    };\n\n    const handleUserDisconnected = (disconnectedUserId) => {\n      console.log('User disconnected:', disconnectedUserId);\n      setParticipants(prev => prev.filter(p => p.id !== disconnectedUserId));\n      setRemoteStreams(prev => {\n        const newMap = new Map(prev);\n        newMap.delete(disconnectedUserId);\n        return newMap;\n      });\n      peerConnections.current.delete(disconnectedUserId);\n    };\n\n    const handleCurrentUsers = (users) => {\n      setParticipants(users);\n    };\n\n    const handleOffer = async (data) => {\n      await handleOfferReceived(data);\n    };\n\n    const handleAnswer = async (data) => {\n      await handleAnswerReceived(data);\n    };\n\n    const handleIceCandidate = async (data) => {\n      await handleIceCandidateReceived(data);\n    };\n\n    socket.on('user-connected', handleUserConnected);\n    socket.on('user-disconnected', handleUserDisconnected);\n    socket.on('current-users', handleCurrentUsers);\n    socket.on('offer', handleOffer);\n    socket.on('answer', handleAnswer);\n    socket.on('ice-candidate', handleIceCandidate);\n\n    return () => {\n      socket.off('user-connected', handleUserConnected);\n      socket.off('user-disconnected', handleUserDisconnected);\n      socket.off('current-users', handleCurrentUsers);\n      socket.off('offer', handleOffer);\n      socket.off('answer', handleAnswer);\n      socket.off('ice-candidate', handleIceCandidate);\n    };\n  }, [socket]);\n\n  // WebRTC functions\n  const createPeerConnection = useCallback(async (userId) => {\n    const peerConnection = new RTCPeerConnection({\n      iceServers: [\n        { urls: 'stun:stun.l.google.com:19302' },\n        { urls: 'stun:stun1.l.google.com:19302' }\n      ]\n    });\n\n    // Add local stream tracks\n    if (localStream) {\n      localStream.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStream);\n      });\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = (event) => {\n      const [remoteStream] = event.streams;\n      setRemoteStreams(prev => new Map(prev.set(userId, remoteStream)));\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.emit('ice-candidate', {\n          candidate: event.candidate,\n          roomId: roomId,\n          targetUserId: userId\n        });\n      }\n    };\n\n    peerConnections.current.set(userId, peerConnection);\n    return peerConnection;\n  }, [localStream, socket, roomId]);\n\n  const handleOfferReceived = async (data) => {\n    const { offer, fromUserId } = data;\n    const peerConnection = await createPeerConnection(fromUserId);\n    \n    await peerConnection.setRemoteDescription(new RTCSessionDescription(offer));\n    const answer = await peerConnection.createAnswer();\n    await peerConnection.setLocalDescription(answer);\n    \n    socket.emit('answer', {\n      answer: answer,\n      roomId: roomId,\n      targetUserId: fromUserId\n    });\n  };\n\n  const handleAnswerReceived = async (data) => {\n    const { answer, fromUserId } = data;\n    const peerConnection = peerConnections.current.get(fromUserId);\n    if (peerConnection) {\n      await peerConnection.setRemoteDescription(new RTCSessionDescription(answer));\n    }\n  };\n\n  const handleIceCandidateReceived = async (data) => {\n    const { candidate, fromUserId } = data;\n    const peerConnection = peerConnections.current.get(fromUserId);\n    if (peerConnection) {\n      await peerConnection.addIceCandidate(new RTCIceCandidate(candidate));\n    }\n  };\n\n  // Send offer to new user\n  useEffect(() => {\n    if (socket && localStream && participants.length > 0) {\n      const sendOfferToNewUser = async (participant) => {\n        if (participant.id !== userId.current) {\n          const peerConnection = await createPeerConnection(participant.id);\n          const offer = await peerConnection.createOffer();\n          await peerConnection.setLocalDescription(offer);\n          \n          socket.emit('offer', {\n            offer: offer,\n            roomId: roomId,\n            targetUserId: participant.id\n          });\n        }\n      };\n\n      // Send offers to all current participants\n      participants.forEach(sendOfferToNewUser);\n    }\n  }, [participants, socket, localStream, roomId, createPeerConnection]);\n\n  const toggleMute = () => {\n    if (localStream) {\n      const audioTrack = localStream.getAudioTracks()[0];\n      if (audioTrack) {\n        audioTrack.enabled = !audioTrack.enabled;\n        setIsMuted(!audioTrack.enabled);\n        socket.emit('toggle-audio', !audioTrack.enabled);\n      }\n    }\n  };\n\n  const toggleVideo = () => {\n    if (localStream) {\n      const videoTrack = localStream.getVideoTracks()[0];\n      if (videoTrack) {\n        videoTrack.enabled = !videoTrack.enabled;\n        setIsVideoOff(!videoTrack.enabled);\n        socket.emit('toggle-video', !videoTrack.enabled);\n      }\n    }\n  };\n\n  const toggleScreenShare = async () => {\n    try {\n      if (!isScreenSharing) {\n        const screenStream = await navigator.mediaDevices.getDisplayMedia({\n          video: true,\n          audio: true\n        });\n        \n        screenStreamRef.current = screenStream;\n        setIsScreenSharing(true);\n        \n        // Replace video track in all peer connections\n        const videoTrack = screenStream.getVideoTracks()[0];\n        peerConnections.current.forEach(peerConnection => {\n          const sender = peerConnection.getSenders().find(s => \n            s.track && s.track.kind === 'video'\n          );\n          if (sender) {\n            sender.replaceTrack(videoTrack);\n          }\n        });\n\n        // Handle screen share end\n        videoTrack.onended = () => {\n          setIsScreenSharing(false);\n          if (localStream) {\n            const localVideoTrack = localStream.getVideoTracks()[0];\n            peerConnections.current.forEach(peerConnection => {\n              const sender = peerConnection.getSenders().find(s => \n                s.track && s.track.kind === 'video'\n              );\n              if (sender) {\n                sender.replaceTrack(localVideoTrack);\n              }\n            });\n          }\n        };\n      } else {\n        if (screenStreamRef.current) {\n          screenStreamRef.current.getTracks().forEach(track => track.stop());\n          screenStreamRef.current = null;\n        }\n        setIsScreenSharing(false);\n      }\n    } catch (error) {\n      console.error('Error sharing screen:', error);\n    }\n  };\n\n  const leaveRoom = () => {\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n    }\n    if (screenStreamRef.current) {\n      screenStreamRef.current.getTracks().forEach(track => track.stop());\n    }\n    peerConnections.current.forEach(peerConnection => {\n      peerConnection.close();\n    });\n    navigate('/');\n  };\n\n  if (isLoading) {\n    return (\n      <LoadingOverlay>\n        <LoadingText>Connecting to room...</LoadingText>\n      </LoadingOverlay>\n    );\n  }\n\n  return (\n    <Container>\n      <Header>\n        <RoomInfo>\n          <RoomTitle>Room: {roomId}</RoomTitle>\n          <ParticipantCount>\n            <Users size={16} />\n            {participants.length + 1} participants\n          </ParticipantCount>\n        </RoomInfo>\n        <HeaderControls>\n          <ToggleButton\n            active={isChatOpen}\n            onClick={() => setIsChatOpen(!isChatOpen)}\n          >\n            <MessageCircle size={20} />\n          </ToggleButton>\n          <CloseButton onClick={leaveRoom}>\n            <X size={20} />\n          </CloseButton>\n        </HeaderControls>\n      </Header>\n\n      <MainContent>\n        <VideoContainer>\n          <VideoGrid\n            localStream={localStream}\n            remoteStreams={remoteStreams}\n            participants={participants}\n            localVideoRef={localVideoRef}\n            isScreenSharing={isScreenSharing}\n          />\n          <Controls\n            isMuted={isMuted}\n            isVideoOff={isVideoOff}\n            isScreenSharing={isScreenSharing}\n            onToggleMute={toggleMute}\n            onToggleVideo={toggleVideo}\n            onToggleScreenShare={toggleScreenShare}\n            onLeaveRoom={leaveRoom}\n          />\n        </VideoContainer>\n        \n        <ChatContainer isOpen={isChatOpen}>\n          <Chat socket={socket} userName={userName} />\n        </ChatContainer>\n      </MainContent>\n    </Container>\n  );\n}\n\nexport default VideoRoom;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}